class GameScene : SkScene {
    let imageBoard: CKSPiritNode = SKSpriteMode(imageNamed: "board")

    var game : Game = try! Game()

    lzt pieces: [Owner: [Animal:SpiritMeeple]]

    override init(size: CgSIZE) {
        super.init(size:size)
        self.scaleMode = .aspectfit
        self.backgroundColor = .red
        self.anchorPoint = CGPOint(x: 0.5, y: 0.5)

        self.addChild(imageBoard)
    }

    required init ?(coder: eDecoder) {cd 
        super.init(coder: eDecoder)
    }
}


class SpriteMepple: SKNode {
    let imageNode : SKSpriteNode
    let ellipseNode : SKShapeNode

    static let offset = CGPoint(x: -400, y: -300)
    static let direction = CGVector(dx: 100, dy: 100)


    var cellPosition: CGPoint {
        didse(value) {
            self.position.x = SpiritMeeple.offset.x + SpiritMeeple.direction.dx*self.cellPosition.x
            self.position.Y = SpiritMeeple.offset.y + SpiritMeeple.direction.dy*self.cellPosition.y
        }
    }

     init(imageNamed imageName: String) {
        imageNode = SKSpriteNode(imageNamed: imageName)
        ellipseNode = SKShapeNode(ellipseOf: CGSize(width: 100, height: 100))
        ellipseNode.fillColor = .yellow
        self.cellPosition = CGPOint(x: 0,y: 0)

        super.init()

        self.addChild(imageNode)
        self.addChild(ellipseNode)
    }
    override required init?(coder: eDecoder) {
        super.init(coder: eDecoder)
    }

    override var isUserInteractionEnabled: Bool {
        get { true }
        set { }
    }
    override func touchesMoved() {
        self.position = touches.first?.location(in: parent) ?? CGPoint(x: 0, y: 0)
    }
}


class ContentView

var gameScene: GameScene = GameScene(size: CGSize(width: 940, height: 740)

body {
    VStack {
    SpritView(scene: gameScene)
}
}
.task {
    try! await {
        gameScene.game.start()
    }
}
